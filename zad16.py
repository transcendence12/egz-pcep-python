data = ((1, 2),) * 7
print(len(data[3:8]))

# To jest tuple jednoelementowa, ktÃ³ra zawiera kolejny tuple (1, 2).

# ZwrÃ³Ä‡ uwagÄ™ na przecinek: bez przecinka byÅ‚oby po prostu (1, 2) â€“ tuple dwuelementowa.

# Ale ((1, 2),) to tuple z jednym elementem: (1, 2).

# ğŸ‘‰ Wynik:

# ((1, 2),)  â†’  [ (1, 2) ]

# 2. * 7

# Powtarzamy ten tuple 7 razy.

# ğŸ‘‰ Wynik:

# data = ((1, 2), (1, 2), (1, 2), (1, 2), (1, 2), (1, 2), (1, 2))


# czyli tuple dÅ‚ugoÅ›ci 7.

# 3. data[3:8]

# Slice od indeksu 3 (wÅ‚Ä…cznie) do 8 (wyÅ‚Ä…cznie).

# data ma indeksy od 0 do 6.

# WiÄ™c data[3:8] = elementy o indeksach 3, 4, 5, 6.

# To sÄ… 4 elementy.





# W Pythonie przecinek, a nie nawiasy, definiuje tuple.
# Nawiasy sÄ… tylko "opakowaniem", ale to przecinek decyduje, czy mamy tuple.

# PrzykÅ‚ady:
# x = (1)      
# to NIE jest tuple â†’ tylko liczba caÅ‚kowita 1

# y = (1,)     
# to jest tuple jednoelementowa â†’ (1,)

# z = (1, 2)   
# to jest tuple dwuelementowa â†’ (1, 2)